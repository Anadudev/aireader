// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id       String @id @unique @default(uuid())
  password String

  userId   String @unique
  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model User {
  id       String @id @unique @default(uuid())
  username String @unique

  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  posts      Post[]
  postTitles Title[]
  accounts Account[]
}

model Title {
  id    String @id @unique @default(uuid())
  title String @unique

  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  authorId String
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  posts    Post[]
}

model Post {
  id        String   @id @unique @default(uuid())
  prompt    String
  response  String

  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  authorId    String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  titleId   String
  title     Title    @relation(fields: [titleId], references: [id], onDelete: Cascade)

  @@unique([titleId, id, authorId])
}
